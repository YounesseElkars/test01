name: Branch Detection Workflow

on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

jobs:
  detect-branch:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    
    # Skip everything unless this is actually a v* tag
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Fetch more history for better branch detection
          fetch-depth: 0

      - name: Debug - Print all GitHub context
        shell: bash
        run: |
          echo "=== GITHUB CONTEXT DEBUG ==="
          echo "Event name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Ref name: ${{ github.ref_name }}"
          echo "Ref type: ${{ github.ref_type }}"
          echo "Head ref: ${{ github.head_ref }}"
          echo "Base ref: ${{ github.base_ref }}"
          echo "SHA: ${{ github.sha }}"
          echo "Actor: ${{ github.actor }}"
          echo "Repository: ${{ github.repository }}"
          echo "Workflow: ${{ github.workflow }}"
          echo "Job: ${{ github.job }}"
          echo "Run ID: ${{ github.run_id }}"
          echo "Run number: ${{ github.run_number }}"
          echo ""

      - name: Debug - Print environment variables
        shell: bash
        run: |
          echo "=== ENVIRONMENT VARIABLES DEBUG ==="
          echo "GITHUB_REF: $GITHUB_REF"
          echo "GITHUB_REF_NAME: $GITHUB_REF_NAME"
          echo "GITHUB_REF_TYPE: $GITHUB_REF_TYPE"
          echo "GITHUB_HEAD_REF: $GITHUB_HEAD_REF"
          echo "GITHUB_BASE_REF: $GITHUB_BASE_REF"
          echo "GITHUB_EVENT_NAME: $GITHUB_EVENT_NAME"
          echo ""

      - name: Debug - Git information
        shell: bash
        run: |
          echo "=== GIT DEBUG ==="
          echo "Operating System: ${{ matrix.os }}"
          echo "Runner OS: $RUNNER_OS"
          echo "Current branch (git branch --show-current):"
          git branch --show-current || echo "No current branch"
          echo ""
          echo "All branches:"
          git branch -a
          echo ""
          echo "Current HEAD:"
          git log --oneline -1
          echo ""
          echo "Git status:"
          git status --porcelain || true
          echo ""

      - name: Detect branch name
        id: branch
        shell: bash
        run: |
          echo "=== BRANCH DETECTION LOGIC ==="
          
          # Initialize variables
          BRANCH_NAME=""
          DETECTION_METHOD=""
          
          # Case 1: Pull Request
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BRANCH_NAME="${{ github.head_ref }}"
            DETECTION_METHOD="pull_request_head_ref"
            echo "Detected via Pull Request: $BRANCH_NAME"
          
          # Case 2: Push to tag
          elif [ "${{ github.ref_type }}" = "tag" ]; then
            BRANCH_NAME="${{ github.ref_name }}"
            DETECTION_METHOD="tag_ref_name"
            echo "Detected via Tag: $BRANCH_NAME"
          
          # Case 3: Push to branch
          elif [ "${{ github.ref_type }}" = "branch" ]; then
            BRANCH_NAME="${{ github.ref_name }}"
            DETECTION_METHOD="branch_ref_name"
            echo "Detected via Branch: $BRANCH_NAME"
          
          # Case 4: Manual workflow dispatch
          elif [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            BRANCH_NAME="${{ github.ref_name }}"
            DETECTION_METHOD="workflow_dispatch_ref_name"
            echo "Detected via Workflow Dispatch: $BRANCH_NAME"
          
          # Fallback methods
          else
            echo "Using fallback detection methods..."
            
            # Try git command
            GIT_BRANCH=$(git branch --show-current 2>/dev/null || echo "")
            if [ -n "$GIT_BRANCH" ]; then
              BRANCH_NAME="$GIT_BRANCH"
              DETECTION_METHOD="git_show_current"
              echo "Detected via git show-current: $BRANCH_NAME"
            else
              # Extract from GITHUB_REF as last resort
              BRANCH_NAME=$(echo "${{ github.ref }}" | sed 's|refs/heads/||' | sed 's|refs/tags/||')
              DETECTION_METHOD="github_ref_extraction"
              echo "Detected via GITHUB_REF extraction: $BRANCH_NAME"
            fi
          fi
          
          # Clean up branch name (remove refs/heads/ or refs/tags/ if present)
          CLEAN_BRANCH_NAME=$(echo "$BRANCH_NAME" | sed 's|refs/heads/||' | sed 's|refs/tags/||')
          
          echo "=== FINAL RESULTS ==="
          echo "Raw branch name: $BRANCH_NAME"
          echo "Clean branch name: $CLEAN_BRANCH_NAME"
          echo "Detection method: $DETECTION_METHOD"
          echo "Event type: ${{ github.event_name }}"
          echo "Ref type: ${{ github.ref_type }}"
          
          # Set outputs
          echo "branch_name=$CLEAN_BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "raw_branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "detection_method=$DETECTION_METHOD" >> $GITHUB_OUTPUT
          echo "event_type=${{ github.event_name }}" >> $GITHUB_OUTPUT
          echo "ref_type=${{ github.ref_type }}" >> $GITHUB_OUTPUT

      - name: Use detected branch name
        shell: bash
        run: |
          echo "=== USING BRANCH NAME ==="
          echo "Branch name: ${{ steps.branch.outputs.branch_name }}"
          echo "Raw branch name: ${{ steps.branch.outputs.raw_branch_name }}"
          echo "Detection method: ${{ steps.branch.outputs.detection_method }}"
          echo "Event type: ${{ steps.branch.outputs.event_type }}"
          echo "Ref type: ${{ steps.branch.outputs.ref_type }}"
          
          # Example usage in conditional logic
          if [ "${{ steps.branch.outputs.branch_name }}" = "main" ]; then
            echo "This is the main branch!"
          elif [ "${{ steps.branch.outputs.branch_name }}" = "develop" ]; then
            echo "This is the develop branch!"
          else
            echo "This is a feature branch or other: ${{ steps.branch.outputs.branch_name }}"
          fi

      - name: Debug - Summary table
        shell: bash
        run: |
          echo "=== SUMMARY TABLE ==="
          echo "| Property | Value |"
          echo "|----------|-------|"
          echo "| Operating System | ${{ matrix.os }} |"
          echo "| Runner OS | $RUNNER_OS |"
          echo "| Event | ${{ github.event_name }} |"
          echo "| Ref Type | ${{ github.ref_type }} |"
          echo "| Detected Branch | ${{ steps.branch.outputs.branch_name }} |"
          echo "| Detection Method | ${{ steps.branch.outputs.detection_method }} |"
          echo "| GitHub Ref | ${{ github.ref }} |"
          echo "| GitHub Head Ref | ${{ github.head_ref }} |"
          echo "| GitHub Base Ref | ${{ github.base_ref }} |"

 